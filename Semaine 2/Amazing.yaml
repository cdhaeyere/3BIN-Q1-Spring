openapi: 3.0.3
info:
  title: Amazing
  description: Amazing
  version: 1.0.0
servers:
  - url: 'https://localhost:8080'
    description: Development server
components:
  schemas:
    product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        category:
          type: string
      example:
        id: 1
        name: Banana
        price: 1.0
        category: Fruit
paths:
  /products:
    get:
      description: "Returns all products from the system that the user has access to"
      responses:
        '200':
          description: "A list of products."
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
    post:
      description: "Creates a new product in the store."
      responses:
        '200':
          description: "Product created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '409':
          description: "Conflict"
      parameters:
        - in: query
          name: product
          description: "Product object that needs to be added to the store"
          required: true
          schema:
            $ref: '#/components/schemas/product'
    delete:
      description: "Delete all the products from the system that the user has access to"
      responses:
        '200':
          description: "Product deleted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
  /products/{id}:
    parameters:
      - name: id
        in: path
        description: "ID of product to return"
        required: true
        schema:
          type: integer
          format: int64
    get:
      description: "Returns a product based on a single ID, if the user has access"
      responses:
        '200':
          description: "A product."
          content:
            application/json:
            schema:
                $ref: '#/components/schemas/product'
        '404':
          description: "Product not found"
    put:
      description: "Update an existing product"
      responses:
        '200':
          description: "Product updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '404':
          description: "Product not found"
        '400':
          description: "Invalid ID supplied"
    delete:
      description: "Deletes a product"
      responses:
        '200':
          description: "Product deleted"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '404':
          description: "Product not found"